// Generated by gencpp from file rbo_create/Tank.msg
// DO NOT EDIT!


#ifndef RBO_CREATE_MESSAGE_TANK_H
#define RBO_CREATE_MESSAGE_TANK_H

#include <ros/service_traits.h>


#include <rbo_create/TankRequest.h>
#include <rbo_create/TankResponse.h>


namespace rbo_create
{

struct Tank
{

typedef TankRequest Request;
typedef TankResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Tank
} // namespace rbo_create


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::rbo_create::Tank > {
  static const char* value()
  {
    return "03e1fb403d16dbbcaf79006d642b45b2";
  }

  static const char* value(const ::rbo_create::Tank&) { return value(); }
};

template<>
struct DataType< ::rbo_create::Tank > {
  static const char* value()
  {
    return "rbo_create/Tank";
  }

  static const char* value(const ::rbo_create::Tank&) { return value(); }
};


// service_traits::MD5Sum< ::rbo_create::TankRequest> should match
// service_traits::MD5Sum< ::rbo_create::Tank >
template<>
struct MD5Sum< ::rbo_create::TankRequest>
{
  static const char* value()
  {
    return MD5Sum< ::rbo_create::Tank >::value();
  }
  static const char* value(const ::rbo_create::TankRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::rbo_create::TankRequest> should match
// service_traits::DataType< ::rbo_create::Tank >
template<>
struct DataType< ::rbo_create::TankRequest>
{
  static const char* value()
  {
    return DataType< ::rbo_create::Tank >::value();
  }
  static const char* value(const ::rbo_create::TankRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::rbo_create::TankResponse> should match
// service_traits::MD5Sum< ::rbo_create::Tank >
template<>
struct MD5Sum< ::rbo_create::TankResponse>
{
  static const char* value()
  {
    return MD5Sum< ::rbo_create::Tank >::value();
  }
  static const char* value(const ::rbo_create::TankResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::rbo_create::TankResponse> should match
// service_traits::DataType< ::rbo_create::Tank >
template<>
struct DataType< ::rbo_create::TankResponse>
{
  static const char* value()
  {
    return DataType< ::rbo_create::Tank >::value();
  }
  static const char* value(const ::rbo_create::TankResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // RBO_CREATE_MESSAGE_TANK_H
